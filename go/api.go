// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Nulladmin.com aitokenizer
 *
 * Aitokenizer is a Nulladmin.com microservice which performs input tokenization for AI workloads. It supports various encodings used by OpenAI, Anthropic and others.
 *
 * API version: 1.0.0
 */

package aitokenizer

import (
	"context"
	"net/http"
	"os"
)

// Cl100kBaseAPIRouter defines the required methods for binding the api requests to a responses for the Cl100kBaseAPI
// The Cl100kBaseAPIRouter implementation should parse necessary information from the http request,
// pass the data to a Cl100kBaseAPIServicer to perform the required actions, then write the service results to the http response.
type Cl100kBaseAPIRouter interface {
	EncodeCl100kBasePost(http.ResponseWriter, *http.Request)
}

// ClaudeAPIRouter defines the required methods for binding the api requests to a responses for the ClaudeAPI
// The ClaudeAPIRouter implementation should parse necessary information from the http request,
// pass the data to a ClaudeAPIServicer to perform the required actions, then write the service results to the http response.
type ClaudeAPIRouter interface {
	EncodeClaudePost(http.ResponseWriter, *http.Request)
}

// DefaultAPIRouter defines the required methods for binding the api requests to a responses for the DefaultAPI
// The DefaultAPIRouter implementation should parse necessary information from the http request,
// pass the data to a DefaultAPIServicer to perform the required actions, then write the service results to the http response.
type DefaultAPIRouter interface {
	ServerHealthGet(http.ResponseWriter, *http.Request)
	ServerVersionGet(http.ResponseWriter, *http.Request)
}

// Gpt2APIRouter defines the required methods for binding the api requests to a responses for the Gpt2API
// The Gpt2APIRouter implementation should parse necessary information from the http request,
// pass the data to a Gpt2APIServicer to perform the required actions, then write the service results to the http response.
type Gpt2APIRouter interface {
	EncodeGpt2Post(http.ResponseWriter, *http.Request)
}

// O200kBaseAPIRouter defines the required methods for binding the api requests to a responses for the O200kBaseAPI
// The O200kBaseAPIRouter implementation should parse necessary information from the http request,
// pass the data to a O200kBaseAPIServicer to perform the required actions, then write the service results to the http response.
type O200kBaseAPIRouter interface {
	EncodeO200kBasePost(http.ResponseWriter, *http.Request)
}

// P50kBaseAPIRouter defines the required methods for binding the api requests to a responses for the P50kBaseAPI
// The P50kBaseAPIRouter implementation should parse necessary information from the http request,
// pass the data to a P50kBaseAPIServicer to perform the required actions, then write the service results to the http response.
type P50kBaseAPIRouter interface {
	EncodeP50kBasePost(http.ResponseWriter, *http.Request)
}

// P50kEditAPIRouter defines the required methods for binding the api requests to a responses for the P50kEditAPI
// The P50kEditAPIRouter implementation should parse necessary information from the http request,
// pass the data to a P50kEditAPIServicer to perform the required actions, then write the service results to the http response.
type P50kEditAPIRouter interface {
	EncodeP50kEditPost(http.ResponseWriter, *http.Request)
}

// R50kBaseAPIRouter defines the required methods for binding the api requests to a responses for the R50kBaseAPI
// The R50kBaseAPIRouter implementation should parse necessary information from the http request,
// pass the data to a R50kBaseAPIServicer to perform the required actions, then write the service results to the http response.
type R50kBaseAPIRouter interface {
	EncodeR50kBasePost(http.ResponseWriter, *http.Request)
}

// Cl100kBaseAPIServicer defines the api actions for the Cl100kBaseAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type Cl100kBaseAPIServicer interface {
	EncodeCl100kBasePost(context.Context, *os.File) (ImplResponse, error)
}

// ClaudeAPIServicer defines the api actions for the ClaudeAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type ClaudeAPIServicer interface {
	EncodeClaudePost(context.Context, *os.File) (ImplResponse, error)
}

// DefaultAPIServicer defines the api actions for the DefaultAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type DefaultAPIServicer interface {
	ServerHealthGet(context.Context) (ImplResponse, error)
	ServerVersionGet(context.Context) (ImplResponse, error)
}

// Gpt2APIServicer defines the api actions for the Gpt2API service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type Gpt2APIServicer interface {
	EncodeGpt2Post(context.Context, *os.File) (ImplResponse, error)
}

// O200kBaseAPIServicer defines the api actions for the O200kBaseAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type O200kBaseAPIServicer interface {
	EncodeO200kBasePost(context.Context, *os.File) (ImplResponse, error)
}

// P50kBaseAPIServicer defines the api actions for the P50kBaseAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type P50kBaseAPIServicer interface {
	EncodeP50kBasePost(context.Context, *os.File) (ImplResponse, error)
}

// P50kEditAPIServicer defines the api actions for the P50kEditAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type P50kEditAPIServicer interface {
	EncodeP50kEditPost(context.Context, *os.File) (ImplResponse, error)
}

// R50kBaseAPIServicer defines the api actions for the R50kBaseAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type R50kBaseAPIServicer interface {
	EncodeR50kBasePost(context.Context, *os.File) (ImplResponse, error)
}
