// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Nulladmin.com aitokenizer
 *
 * Aitokenizer is a Nulladmin.com microservice which performs input tokenization for AI workloads. It supports various encodings used by OpenAI, Anthropic and others.
 *
 * API version: 1.0.0
 */

package aitokenizer

import (
	"context"
	"go.uber.org/zap"
	"net/http"
)

// DefaultAPIService is a service that implements the logic for the DefaultAPIServicer
// This service should implement the business logic for every endpoint for the DefaultAPI API.
// Include any external packages or services that will be required by this service.
type DefaultAPIService struct {
}

// NewDefaultAPIService creates a default api service
func NewDefaultAPIService() *DefaultAPIService {
	return &DefaultAPIService{}
}

// ServerHealthGet -
func (s *DefaultAPIService) ServerHealthGet(ctx context.Context) (ImplResponse, error) {

	response := &ServerHealthGet200Response{
		Health: "Ready",
	}
	zap.L().Info("",
		zap.Int("Response", http.StatusOK),
	)
	return Response(http.StatusOK, response), nil

}

// ServerVersionGet -
func (s *DefaultAPIService) ServerVersionGet(ctx context.Context) (ImplResponse, error) {

	response := &ServerVersionGet200Response{
		ServiceName: ServiceName,
		Version:     Version,
		Revision:    Revision,
		Branch:      Branch,
		BuildDate:   BuildDate,
		GoVersion:   GoVersion,
		OSArch:      OSArch,
	}
	zap.L().Info("",
		zap.Int("Response", http.StatusOK),
	)
	return Response(http.StatusOK, response), nil

}
